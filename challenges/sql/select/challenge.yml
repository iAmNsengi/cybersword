# This file represents the base specification of your challenge. It is used by
# other tools to install and deploy your challenge.

# Required sections
name: "SELECT"
author: "Zack Sargent"
category: SQL
description: |
    Let's get started with SQL!

    <a href="/ide/#challenge=100" target="_blank">
        <h2>
            Click Here!
        </h2>
    </a>

# prompt is inserted into the editor
prompt: |
    -- Welcome to the Cyber IDE!
    -- You are currently running SQL on a SQLite 3 database.
    --
    -- SQL is a language all about working with data.
    --
    --     Tip: You may hear SQL pronounced "es-cue-el" or "see-kwel".
    --          Both are valid.
    --
    -- In comparison:
    --     Python is a general-purpose programming language.
    --     SQL is specifically for working with data.
    --
    -- In this competition, you will complete a few challenges about SQL,
    -- and then apply what you learned by hacking a website's database.
    --
    -- As detailed in the "Input" section below, your current database has two tables of data:
    --   1. "authors", which has:
    --         "authorId"
    --         "name"
    --
    --   2. "flashcards", which has:
    --         "question"
    --         "answer"
    --         "authorId"


    -- Your first task: query all of the authors by uncommenting the last line:

    -- SELECT authorId, name FROM authors;

# checked by Judge0 Wrapper:
answer: |
  1|Alice
  2|Bob
  3|Charlie

value: 10
type: standard

# Flags specify answers that your challenge use. You should generally provide at least one.
# Can be removed if unused
# Accepts strings or dictionaries of CTFd API data
flags:
    # A static case sensitive flag
    - cybersword{select_one_and_all}

# Topics are used to help tell what techniques/information a challenge involves
# They are generally only visible to admins
# Accepts strings
topics:
    - SQL

# Hints are used to give players a way to buy or have suggestions. They are not
# required but can be nice.
# Can be removed if unused
# Accepts dictionaries or strings
hints:
    - "Press tab to indent code."
    - "You can also use Ctrl + `]` to indent and Ctrl + `[` to un-indent."

# Requirements are used to make a challenge require another challenge to be
# solved before being available.
# Can be removed if unused
# Accepts challenge names as strings or challenge IDs as integers
requirements:
    - "Welcome"
    - "Hello, World!" # Hello, World! is id=0, so it has the nice introduction.

# The state of the challenge.
# If the field is omitted, the challenge is visible by default.
# If provided, the field can take one of two values: hidden, visible.
state: visible

# Specifies what version of the challenge specification was used.
# Subject to change until ctfcli v1.0.0
version: "0.1"
